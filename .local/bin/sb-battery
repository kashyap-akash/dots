#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

# case $BLOCK_BUTTON in
# 	3) notify-send "🔋 Battery module" "🔋: discharging
# 🛑: not charging
# ♻: stagnant charge
# 🔌: charging
# ⚡: charged
# ❗: battery very low!
# - Scroll to change adjust xbacklight." ;;
# 	4) xbacklight -inc 10 ;;
# 	5) xbacklight -dec 10 ;;
# 	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
# esac
#
# # Loop through all attached batteries and format the info
# for battery in /sys/class/power_supply/BAT?*; do
# 	# If non-first battery, print a space separator.
# 	[ -n "${capacity+x}" ] && printf " "
# 	# Sets up the status and capacity
# 	case "$(cat "$battery/status" 2>&1)" in
# 		"Full") status="⚡" ;;
# 		"Discharging") status="🔋" ;;
# 		"Charging") status="🔌" ;;
# 		"Not charging") status="🛑" ;;
# 		"Unknown") status="♻️" ;;
# 		*) exit 1 ;;
# 	esac
# 	capacity="$(cat "$battery/capacity" 2>&1)"
# 	# Will make a warn variable if discharging and low
# 	[ "$status" = "🔋" ] && [ "$capacity" -le 25 ] && warn="❗"
# 	# Prints the info
# 	printf "%s%s%d%%" "$status" "$warn" "$capacity"; unset warn
# done && printf "\\n"
batstat="$(cat /sys/class/power_supply/BAT1/status)"
battery="$(cat /sys/class/power_supply/BAT1/capacity)"
if [[ $batstat != 'Discharging' ]] && [[ $battery -ge 99 ]]; then
batstat="⚡" 
elif [[ $batstat != 'Discharging' ]] && [[ $battery -ge 75 ]]; then
batstat=" "
elif [[ $batstat != 'Discharging' ]] && [[ $battery -ge 50 ]]; then
batstat=" "
elif [[ $batstat != 'Discharging' ]] && [[ $battery -ge 25 ]]; then
batstat=" "
elif [[ $batstat != 'Discharging' ]] && [[ $battery -ge 1 ]]; then
batstat=" "
elif [[ $batstat = 'Discharging' ]] && [[ $battery -le 5 ]]; then
batstat="  "  
notify-send "Low Battery  $battery%" "System will shutdown automatically." -u critical -i "~/.config/dunst/images/battery-low.png" -r 9991
elif [[ $batstat = 'Discharging' ]] && [[ $battery -le 25 ]]; then
batstat=" "  
notify-send "Low Battery" "$battery% of battery remaining." -u critical -i "~/.config/dunst/images/battery-low.png" -r 9991
elif [[ $batstat = 'Discharging' ]] && [[ $battery -le 50 ]]; then
batstat=" "
elif [[ $batstat = 'Discharging' ]] && [[ $battery -le 75 ]]; then
batstat=" "
elif [[ $batstat = 'Discharging' ]] && [[ $battery -le 97 ]]; then
batstat=" "
elif [[ $batstat = 'Discharging' ]] && [[ $battery -le 100 ]]; then
batstat=" "
fi

echo "$batstat $battery%"

